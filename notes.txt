Changing dir structure in efforts to cleanup
- Eliminate starter dir
- heroku specific

authorization
- setup .env
    - owner@stuff.com (pw: passwoid123!)
    - user@stuff.com (pw: passwoid123!)
    
if location_id is None: Location does not exist. Please correct or create new location

For README.md for pagination
### Pagination
- based on generic items (goal specific to Locations, Books, & other items as added)

''' Pagination works. 
ITEMS_PER_PAGE = 5

def paginate(request, selection, type):
  page = request.args.get('page', 1, type=int)
  start = (page - 1) * ITEMS_PER_PAGE
  end = start + ITEMS_PER_PAGE

  if type == 'Location':
    locations = [location.format() for location in selection]
    return locations[start:end

  if type == 'Book':
    books = [book.format() for book in selection]
    return books[start:end]
 
 
  Get Locations: 
  try: 
    locations = ...
    get_locations = paginate(request, locations, 'Location')


  Get books:
  try:
    books = ...
    get_books = paginate(request, books, 'Book')

''' 

**future features: 
- Owner role can create new categories of things
- Admin role creates users and assigns privileges
- Helper role changes location

'''
class Video(db.Model):
    __tablename__ = 'Video'

    id = Column(Integer, primary_key=True)
    title = Column(String)
    subject = Column(String)
    genre = Column(String)
    description = Column(String)
    notes = Column(String)
    form = Column(String)
    location = Column(String)

class Audio(db.Model):
    __tablename__ = 'Audio'

    id = Column(Integer, primary_key=True)
    title = Column(String)
    subject = Column(String)
    genre = Column(String)
    description = Column(String)
    notes = Column(String)
    form = Column(String)
    location = Column(String)

class Object(db.Model):
    __tablename__ = 'Object'

    id = Column(Integer, primary_key = True)
    name = Column(String)
    description = Column(String)
    notes = Column(String)
    form = Column(String)
    location = Column(Integer)
'''