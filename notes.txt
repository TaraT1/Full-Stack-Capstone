#For local development
ENV = 'dev'

if ENV == 'dev':
    database_path = 'postgresql://postgres:postgres@localhost:5432/stuff'

'''
#For production
load_dotenv()

database_path = os.getenv('DATABASE_URL')
'''
'''
db development
ENV = 'dev'

if ENV == 'dev':
    app.debug = True
    app.config['SQLALCHEMY_DATABASE_URI'] = ''
else:
    app.debug = False
    app.config['SQLALCHEMY_DATABASE_URI'] = '' 
'''

 reference js file <script src="{{url_for('js', filename etc)}}

 jwt URL: https://fs-cap.us.auth0.com/authorize?audience=stuff&response_type=token&client_id=MihahCAfPHgMqflvzrtWBBULAi40i9eb&redirect_uri=http://localhost:8080/login
 
 curl -X POST https://forstu
ff.herokuapp.com/locations/add -H 'Content-Type: application/json' -d '{"name": "location1", "t
ype": "shelf"}' -H 'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImIyUGU0Rnk1azhTR2Q1VHRadjVHciJ9.eyJpc3MiOiJodHRwczovL2ZzLWNhcC51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjFjMmE2ZGI3OGI0YmQwMDZhYzU4OTA5IiwiYXVkIjoic3R1ZmYiLCJpYXQiOjE2NDU1ODU2ODMsImV4cCI6MTY0NTU5Mjg4MywiYXpwIjoiTWloYWhDQWZQSGdNcWZsdnpydFdCQlVMQWk0MGk5ZWIiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTpib29rIiwiZGVsZXRlOmxvY2F0aW9uIiwiZ2V0OmJvb2tzIiwiZ2V0OmxvY2F0aW9ucyIsInBhdGNoOmJvb2siLCJwYXRjaDpsb2NhdGlvbiIsInBvc3Q6Ym9vayIsInBvc3Q6bG9jYXRpb24iXX0.PsznRIxFehj5XaYOR6rVLRp97XsLLc1CxlaV0-aXUc3VX1Nrcyl3pWf54waLiBofkBVdLmXg4QaHgrdE9DPiNEYfXSOXX4EAxY8CrZuXZuCKi_cnAgKY6gnOMvKFBJH_aIOrI7PJpywungRhixvfXcoIMx9WKu6Q-6WvZDhUk3qhxuY7igHzTJtJlJ_jcrHV9xUFXXm7l95UtHYZo4oUCHSYPafxUOMWoFlFuX25gLxu7_Z4zI6sLMGQfjikK62QMmBro85I7hzgIGuRePnufhWQdo2MdRquQZ361GI8fgD71mANX8toZezUMycn7OrAJRYs8UJvd5tXmTipOfexTQeyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImIyUGU0Rnk1azhTR2Q1VHRadjVHciJ9.eyJpc3MiOiJodHRwczovL2ZzLWNhcC51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjFjMmE2ZGI3OGI0YmQwMDZhYzU4OTA5IiwiYXVkIjoic3R1ZmYiLCJpYXQiOjE2NDU2NTYxOTgsImV4cCI6MTY0NTY2MzM5OCwiYXpwIjoiTWloYWhDQWZQSGdNcWZsdnpydFdCQlVMQWk0MGk5ZWIiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTpib29rIiwiZGVsZXRlOmxvY2F0aW9uIiwiZ2V0OmJvb2tzIiwiZ2V0OmxvY2F0aW9ucyIsInBhdGNoOmJvb2siLCJwYXRjaDpsb2NhdGlvbiIsInBvc3Q6Ym9vayIsInBvc3Q6bG9jYXRpb24iXX0.i9XLdgW0LmxGc0qd-2tElIr-pEZD33YYRPQ2EvkWeHWiRYi82Oh3_qYR5BZYncjE-e3NXlB-4qcGCQn-jtReLaQ427Ebmg8lb9DCrbM4ao8IEbqL6cpLs1T2e7XKk5kWqgN20LX5TaKMngZ67BSJDTvIp8nMtn2oWMrk5hTp3YKPoV5jJBSG7KK5u8maZTm9TnggoohZwLQR79OE9hYUMj_EJfn28Xquo4GZD9-bZkJKsNVgw-0TyBarE_yccB8ZIlTqemk4nL-oeX0MJvrif0kGTtW-tyPinXahotbKfjpTwDZ3P8iEWILBHx-735vuw3zb1JartYM3sVfG-7slqAeyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImIyUGU0Rnk1azhTR2Q1VHRadjVHciJ9.eyJpc3MiOiJodHRwczovL2ZzLWNhcC51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjFjMmE2ZGI3OGI0YmQwMDZhYzU4OTA5IiwiYXVkIjoic3R1ZmYiLCJpYXQiOjE2NDU2NjY2NjgsImV4cCI6MTY0NTY3Mzg2OCwiYXpwIjoiTWloYWhDQWZQSGdNcWZsdnpydFdCQlVMQWk0MGk5ZWIiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTpib29rIiwiZGVsZXRlOmxvY2F0aW9uIiwiZ2V0OmJvb2tzIiwiZ2V0OmxvY2F0aW9ucyIsInBhdGNoOmJvb2siLCJwYXRjaDpsb2NhdGlvbiIsInBvc3Q6Ym9vayIsInBvc3Q6bG9jYXRpb24iXX0.WGnmnoHMOph91zBPvStpuSTEg6yEGZ9BylNj1spkkkNCEwZlhl7fbONMcNV_JcD7TqwT3E8FNkj86Mc574JiRVr8Krmzpw0LpQhWzQkfLoihq5gb6wnZTrNqv5eoTCQ2eEipp-WgdC2832A3Nj7cxhtzg8G2TnJOHOI8YBLmx2urxaSvZyCBadAveuf8CJIf_BI1xjgG-Vd47l8KOPhVCwNnzrnkQa96P9nNcS2otjhIsLrGefSomlccs-8zxbeamZ9DEhQntulLkdvgpiuTaYUwTSlb_LmkdfDVCIrUUNyjEtaVe9CI-eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImIyUGU0Rnk1azhTR2Q1VHRadjVHciJ9.eyJpc3MiOiJodHRwczovL2ZzLWNhcC51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjFjMmE2ZGI3OGI0YmQwMDZhYzU4OTA5IiwiYXVkIjoic3R1ZmYiLCJpYXQiOjE2NDU2NjY2NjgsImV4cCI6MTY0NTY3Mzg2OCwiYXpwIjoiTWloYWhDQWZQSGdNcWZsdnpydFdCQlVMQWk0MGk5ZWIiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTpib29rIiwiZGVsZXRlOmxvY2F0aW9uIiwiZ2V0OmJvb2tzIiwiZ2V0OmxvY2F0aW9ucyIsInBhdGNoOmJvb2siLCJwYXRjaDpsb2NhdGlvbiIsInBvc3Q6Ym9vayIsInBvc3Q6bG9jYXRpb24iXX0.WGnmnoHMOph91zBPvStpuSTEg6yEGZ9BylNj1spkkkNCEwZlhl7fbONMcNV_JcD7TqwT3E8FNkj86Mc574JiRVr8Krmzpw0LpQhWzQkfLoihq5gb6wnZTrNqv5eoTCQ2eEipp-WgdC2832A3Nj7cxhtzg8G2TnJOHOI8YBLmx2urxaSvZyCBadAveuf8CJIf_BI1xjgG-Vd47l8KOPhVCwNnzrnkQa96P9nNcS2otjhIsLrGefSomlccs-8zxbeamZ9DEhQntulLkdvgpiuTaYUwTSlb_LmkdfDVCIrUUNyjEtaVe9CI-BfdbvAqUu_Oy_0IsggD1EgvkGM5OfDFsgBfdbvAqUu_Oy_0IsggD1EgvkGM5OfDFsg'


curl -X POST https://forstuff.herokuapp.com -H 'Authorization: Bearer ...' -H 'Content-Type: application/json'

authorization
- setup .env
    - owner@stuff.com (pw: passwoid123!)
    - user@stuff.com (pw: passwoid123!)
    
if location_id is None: Location does not exist. Please correct or create new location

prod and dev branch. prod for heroku deploy

For README.md for pagination
### Pagination
- based on generic items (goal specific to Locations, Books, & other items as added)

''' Pagination works. Shows page 1, not sure how to see advance
ITEMS_PER_PAGE = 5

def paginate(request, selection, type):
  page = request.args.get('page', 1, type=int)
  start = (page - 1) * ITEMS_PER_PAGE
  end = start + ITEMS_PER_PAGE

  if type == 'Location':
    locations = [location.format() for location in selection]
    return locations[start:end

  if type == 'Book':
    books = [book.format() for book in selection]
    return books[start:end]
 
 
  Get Locations: 
  try: 
    locations = ...
    get_locations = paginate(request, locations, 'Location')


  Get books:
  try:
    books = ...
    get_books = paginate(request, books, 'Book')

''' 

**future features: 
- Owner role can create new categories of things
- Admin role creates users and assigns privileges
- Helper role changes location

'''
class Video(db.Model):
    __tablename__ = 'Video'

    id = Column(Integer, primary_key=True)
    title = Column(String)
    subject = Column(String)
    genre = Column(String)
    description = Column(String)
    notes = Column(String)
    form = Column(String)
    location = Column(String)

class Audio(db.Model):
    __tablename__ = 'Audio'

    id = Column(Integer, primary_key=True)
    title = Column(String)
    subject = Column(String)
    genre = Column(String)
    description = Column(String)
    notes = Column(String)
    form = Column(String)
    location = Column(String)

class Object(db.Model):
    __tablename__ = 'Object'

    id = Column(Integer, primary_key = True)
    name = Column(String)
    description = Column(String)
    notes = Column(String)
    form = Column(String)
    location = Column(Integer)
'''